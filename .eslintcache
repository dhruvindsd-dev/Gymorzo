[{"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\index.js":"1","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\App.js":"2","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\reportWebVitals.js":"3","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Home\\Home.js":"4","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Auth\\Auth.js":"5","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Logo\\Logo.js":"6","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Auth\\InputList\\InputList.js":"7","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Input\\Input.js":"8","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\ErrorMsg\\ErrorMsg.js":"9","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\WorkOuts\\WorkOuts.js":"10","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\Feed.js":"11","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Profile\\Profile.js":"12","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Navbar\\Navbar.js":"13","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\AuthContext.js":"14","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\WorkOutCard\\WorkOutCard.js":"15","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorLogin\\InstructorLogin.js":"16","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorWorkouts\\InstructorWorkouts.js":"17","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\InstructorStudents.js":"18","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\UserProfileCard\\UserProfileCard.js":"19","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Loader\\Loader.js":"20","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\StudentModal\\StudentModal.js":"21","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\InstructorNewWorkout.js":"22","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiThree\\StateUiThree.js":"23","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiOne\\StateUiOne.js":"24","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiTwo\\StateUiTwo.js":"25","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\NewStudentModal\\NewStudentModal.js":"26","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\NewStudentModal\\StudentCard\\StudentCard.js":"27","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\AssignWorkoutModal\\AssignWorkoutModal.js":"28","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\AssignWorkoutModal\\WorkoutCard\\WorkoutCard.js":"29","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\DoWorkOutSummary.js":"30","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\ExerciseCard\\ExerciseCard.js":"31","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\PostCard\\PostCard.js":"32","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\NewPost\\NewPost.js":"33","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchModal\\UserSearchModal.js":"34","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserPanel.js":"35","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\MainFeed\\MainFeed.js":"36","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchModal\\SearchedUserListItem\\SearchedUserListItem.js":"37","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchInput\\UserSearchInput.js":"38","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\NotFound\\NotFound.js":"39","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Profile\\Menu.js":"40","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\DoWorkOut.js":"41","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\AfterWorkout.js":"42","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\Hooks\\fetchWithCache.js":"43"},{"size":593,"mtime":1609778423767,"results":"44","hashOfConfig":"45"},{"size":4305,"mtime":1613293345736,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"45"},{"size":175,"mtime":1609778243535,"results":"48","hashOfConfig":"45"},{"size":2138,"mtime":1613288072444,"results":"49","hashOfConfig":"45"},{"size":244,"mtime":1609782036953,"results":"50","hashOfConfig":"45"},{"size":4594,"mtime":1613285955646,"results":"51","hashOfConfig":"45"},{"size":645,"mtime":1610388807900,"results":"52","hashOfConfig":"45"},{"size":570,"mtime":1610359228846,"results":"53","hashOfConfig":"45"},{"size":2830,"mtime":1613329004669,"results":"54","hashOfConfig":"45"},{"size":338,"mtime":1613303331156,"results":"55","hashOfConfig":"45"},{"size":1948,"mtime":1613618106787,"results":"56","hashOfConfig":"45"},{"size":3881,"mtime":1613287704659,"results":"57","hashOfConfig":"45"},{"size":113,"mtime":1609913879656,"results":"58","hashOfConfig":"45"},{"size":666,"mtime":1613723360871,"results":"59","hashOfConfig":"45"},{"size":3992,"mtime":1611906686504,"results":"60","hashOfConfig":"45"},{"size":2506,"mtime":1613362349396,"results":"61","hashOfConfig":"45"},{"size":4078,"mtime":1613716330620,"results":"62","hashOfConfig":"45"},{"size":943,"mtime":1610904890810,"results":"63","hashOfConfig":"45"},{"size":537,"mtime":1613329342981,"results":"64","hashOfConfig":"45"},{"size":1813,"mtime":1611983255487,"results":"65","hashOfConfig":"45"},{"size":3888,"mtime":1613714812190,"results":"66","hashOfConfig":"45"},{"size":2333,"mtime":1610177848863,"results":"67","hashOfConfig":"45"},{"size":1027,"mtime":1611906615830,"results":"68","hashOfConfig":"45"},{"size":4195,"mtime":1613722494622,"results":"69","hashOfConfig":"45"},{"size":2692,"mtime":1613717767743,"results":"70","hashOfConfig":"45"},{"size":1133,"mtime":1611984166845,"results":"71","hashOfConfig":"45"},{"size":1690,"mtime":1613717204386,"results":"72","hashOfConfig":"45"},{"size":1373,"mtime":1613618811775,"results":"73","hashOfConfig":"45"},{"size":3769,"mtime":1612332090048,"results":"74","hashOfConfig":"45"},{"size":674,"mtime":1613723557977,"results":"75","hashOfConfig":"45"},{"size":976,"mtime":1611906641208,"results":"76","hashOfConfig":"45"},{"size":1973,"mtime":1613319255983,"results":"77","hashOfConfig":"45"},{"size":2077,"mtime":1613307528787,"results":"78","hashOfConfig":"45"},{"size":1980,"mtime":1613307097382,"results":"79","hashOfConfig":"45"},{"size":1161,"mtime":1613307009852,"results":"80","hashOfConfig":"45"},{"size":2330,"mtime":1611906662698,"results":"81","hashOfConfig":"45"},{"size":1143,"mtime":1613307181948,"results":"82","hashOfConfig":"45"},{"size":624,"mtime":1611383209498,"results":"83","hashOfConfig":"45"},{"size":3330,"mtime":1613720563887,"results":"84","hashOfConfig":"45"},{"size":4199,"mtime":1612090769129,"results":"85","hashOfConfig":"45"},{"size":1329,"mtime":1612097961353,"results":"86","hashOfConfig":"45"},{"size":1093,"mtime":1613409257747,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"b3a42h",{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"90"},"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\index.js",[],["182","183"],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\App.js",["184","185"],"import \"../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport \"./assets/css/bulma/bulma.css\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router\";\nimport Home from \"./pages/Home/Home\";\nimport Auth from \"./pages/Auth/Auth\";\nimport WorkOuts from \"./pages/WorkOuts/WorkOuts\";\nimport Feed from \"./pages/Feed/Feed\";\nimport Profile from \"./pages/Profile/Profile\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport axios from \"axios\";\nimport AuthContext from \"./AuthContext\";\nimport { useMemo, useState } from \"react\";\nimport InstructorLogin from \"./pages/InstructorLogin/InstructorLogin\";\nimport InstructorWorkouts from \"./pages/InstructorWorkouts/InstructorWorkouts\";\nimport InstructorStudents from \"./pages/InstructorStudents/InstructorStudents\";\nimport InstructorNewWorkout from \"./pages/InstructorNewWorkout/InstructorNewWorkout\";\nimport DoWorkOutSummary from \"./pages/DoWorkOutSummary/DoWorkOutSummary\";\nimport NewPost from \"./pages/NewPost/NewPost\";\nimport NotFound from \"./pages/NotFound/NotFound\";\n\nexport const AxiosInstance = axios.create({\n  baseURL: \"http://127.0.0.1:8000/\",\n  timeout: 3000,\n});\n\nconst token = localStorage.getItem(\"token\");\nconst username = localStorage.getItem(\"username\");\nconst email = localStorage.getItem(\"email\");\nconst instructor = localStorage.getItem(\"instructor\") == \"true\" ? true : false;\n\nexport const CACHE = new Map();\n\nlet initialState = {\n  isAuthenticated: false,\n  token: \"\",\n  username: \"\",\n  email: \"\",\n  isInstructor: false,\n};\nif (token && username && email) {\n  initialState = {\n    isAuthenticated: true,\n    token: token,\n    username: username,\n    email: email,\n    isInstructor: instructor,\n  };\n}\n\nfunction App() {\n  const [AuthState, setAuthState] = useState(initialState);\n  // login, logout ...\n  const handleLogin = (token, username, email, instructor = false) => {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"username\", username);\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"instructor\", instructor.toString());\n    setAuthState({\n      isAuthenticated: true,\n      token: token,\n      username: username,\n      email: email,\n      isInstructor: instructor,\n    });\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"email\");\n    setAuthState({\n      isAuthenticated: false,\n      token: \"\",\n      username: \"\",\n      email: \"\",\n      isInstructor: false,\n    });\n  };\n  useMemo(() => {\n    AxiosInstance.interceptors.request.use((req) => {\n      if (AuthState.isAuthenticated) {\n        req.headers.Authorization = `Token ${AuthState.token}`;\n      }\n      return req;\n    });\n  }, [AuthState.token]);\n  return (\n    <AuthContext.Provider\n      value={{ ...AuthState, login: handleLogin, logout: handleLogout }}\n    >\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        {/* user */}\n        <Route path=\"/auth/:type\" exact component={Auth} />\n        <Route path=\"/workouts/:type\" exact component={WorkOuts} />\n        <Route path=\"/feed\" exact component={Feed} />\n        <Route path=\"/new-post\" exact component={NewPost} />\n        <Route path=\"/profile/:username\" exact component={Profile} />\n        <Route\n          path=\"/profile/:username/workouts/:type\"\n          exact\n          component={Profile}\n        />\n        {/* instructor routes  */}\n        <Route\n          path=\"/auth/instructor/login\"\n          exact\n          component={InstructorLogin}\n        />\n        <Route\n          path=\"/instructor/students\"\n          exact\n          component={InstructorStudents}\n        />\n        <Route\n          path=\"/instructor/assign-workout/:studentUsername\"\n          exact\n          component={InstructorStudents}\n        />\n        <Route\n          path=\"/instructor/workouts/new/:type\"\n          exact\n          component={InstructorNewWorkout}\n        />\n        <Route\n          path=\"/instructor/workouts\"\n          exact\n          component={InstructorWorkouts}\n        />\n        <Route path=\"/workout/:id\" exact component={DoWorkOutSummary} />\n        <Route path=\"/not-found\" component={NotFound} />\n        <Route component={NotFound} />\n      </Switch>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\reportWebVitals.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Home\\Home.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Auth\\Auth.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Logo\\Logo.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Auth\\InputList\\InputList.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Input\\Input.js",["186","187"],"import React, { useEffect, useRef } from \"react\";\r\n\r\nconst Input = (props) => {\r\n  let invalidClass = \"\";\r\n  if (!props.valid && props.touched) {\r\n    invalidClass = \"is-primary\";\r\n  }\r\n  return (\r\n    <div className=\"field\">\r\n      <div className=\"control\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={props.change}\r\n          value={props.value}\r\n          className={\"input \" + invalidClass}\r\n          {...props.config}\r\n        />\r\n      </div>\r\n      {!props.valid && props.touched ? (\r\n        <p className=\"help is-danger\">{props.errorMsg}</p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Input);\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\ErrorMsg\\ErrorMsg.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\WorkOuts\\WorkOuts.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\Feed.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Profile\\Profile.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Navbar\\Navbar.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\AuthContext.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\WorkOutCard\\WorkOutCard.js",["188"],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorLogin\\InstructorLogin.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorWorkouts\\InstructorWorkouts.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\InstructorStudents.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\UserProfileCard\\UserProfileCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Loader\\Loader.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\StudentModal\\StudentModal.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\InstructorNewWorkout.js",["189","190"],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiThree\\StateUiThree.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiOne\\StateUiOne.js",["191"],"import React from \"react\";\r\n\r\nconst StateUiOne = ({ handleInput, value, touched, next }) => (\r\n  <div\r\n    className=\"center-vertically\"\r\n    style={{ height: \"60vh\", justifyContent: \"center\" }}\r\n  >\r\n    <div className=\"field has-addons\">\r\n      <div className=\"control\">\r\n        <label className=\" button is-static \">Workout Name</label>\r\n      </div>\r\n      <div className=\"control\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={(evnt) => {\r\n            handleInput(\"name\", evnt.target.value);\r\n          }}\r\n          value={value}\r\n          className=\"input\"\r\n        />\r\n        {touched && value == 0 && (\r\n          <p className=\"help is-danger\">Enter A Valid Name</p>\r\n        )}\r\n      </div>\r\n      <div className=\"control\">\r\n        <button\r\n          disabled={!(value.length > 0)}\r\n          className=\"button is-link is-light is-outlined\"\r\n          onClick={next}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n// @ts-ignore\r\nexport default StateUiOne;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiTwo\\StateUiTwo.js",["192","193"],"import React, { useEffect, useState } from \"react\";\r\nimport { AxiosInstance } from \"../../../App\";\r\n\r\nconst StateUiTwo = ({\r\n  allExercises,\r\n  exerciseChangeHandler,\r\n  next,\r\n  removeExercise,\r\n}) => {\r\n  // showing and removing modal using css since i wann preserve the state of the input checkboxes\r\n  const [ShowModal, setShowModal] = useState(false);\r\n\r\n  //   const [SelectedExercises, setSelectedExercises] = useState([]);\r\n  // functionality :\r\n  // 1. get all the exercies and show em in a modal,\r\n  // 2. remove exercies\r\n  // 3. pass all the ids of the exercies in a method passes\r\n  const selectedExercises = allExercises.filter((item) => !!item.checked);\r\n  console.log(selectedExercises);\r\n  let exercises;\r\n  if (!!selectedExercises.length)\r\n    exercises = (\r\n      <div className=\"columns is-multiline is-mobile\">\r\n        {selectedExercises.map((item, i) => (\r\n          <ExerciseCard\r\n            name={item.name}\r\n            key={i}\r\n            muscles={item.muscle}\r\n            remove={removeExercise.bind(this, item.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  else\r\n    exercises = (\r\n      <p className=\"is-size-5 \">You Have Not Selected Any Exercise</p>\r\n    );\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"button is-link is-light is-outlined  mb-3\"\r\n        onClick={setShowModal.bind(this, true)}\r\n      >\r\n        <span className=\"icon\">\r\n          <i className=\"fas fa-plus\"></i>\r\n        </span>\r\n        <span>Add Exercise</span>\r\n      </button>\r\n      <p className=\"is-size-4 mb-3 has-text-weight-bold\">Workout Exercises</p>\r\n      {exercises}\r\n      <div className=\"section has-text-centered\">\r\n        <button className=\"button is-link is-large\" onClick={next}>\r\n          <span>Next</span>\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-chevron-right\"></i>\r\n          </span>\r\n        </button>\r\n      </div>\r\n      <Modal\r\n        exercise={allExercises}\r\n        changed={exerciseChangeHandler}\r\n        close={setShowModal.bind(this, false)}\r\n        isActive={ShowModal && true}\r\n        done={setShowModal.bind(this, false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst ExerciseCard = ({ name, muscles, remove }) => (\r\n  <div className=\"column is-3-desktop is-6-touch\">\r\n    <div className=\"box red-gradient\">\r\n      <div className=\"columns\">\r\n        <div className=\"column is-8\">\r\n          <p className=\"is-size-4 has-text-weight-semibold\">{name}</p>\r\n          <p>{muscles}</p>\r\n        </div>\r\n        <div className=\"column has-text-right\">\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <button\r\n              onClick={remove}\r\n              className=\"button ml-5 is-danger is-medium\"\r\n            >\r\n              <span className=\"icon \">\r\n                <i className=\"fas fa-times\"></i>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Modal = ({ exercise, changed, close, done, isActive = false }) => (\r\n  <div className={\"modal \" + (isActive && \"is-active\")}>\r\n    <div className=\"modal-background\" onClick={close}></div>\r\n    <div className=\"modal-card\">\r\n      <header className=\"modal-card-head\">\r\n        <p className=\"modal-card-title\">Exercises</p>\r\n        <button className=\"delete\"></button>\r\n      </header>\r\n      <section className=\"modal-card-body has-background-light\">\r\n        {exercise.map((item, i) => (\r\n          <div key={i}>\r\n            <label className=\"checkbox is-unselectable\">\r\n              <input\r\n                checked={item.checked ? true : false}\r\n                onChange={changed.bind(this, i)}\r\n                type=\"checkbox\"\r\n                id=\"\"\r\n                className=\"mr-2\"\r\n              />\r\n              <span className=\"is-size-5\">{item.name}</span>\r\n            </label>\r\n            <br />\r\n          </div>\r\n        ))}\r\n      </section>\r\n      <footer className=\"modal-card-foot\">\r\n        <button className=\"button is-link\" onClick={done}>\r\n          Done\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default StateUiTwo;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\NewStudentModal\\NewStudentModal.js",["194","195"],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\NewStudentModal\\StudentCard\\StudentCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\AssignWorkoutModal\\AssignWorkoutModal.js",["196","197","198"],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\AssignWorkoutModal\\WorkoutCard\\WorkoutCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\DoWorkOutSummary.js",["199","200"],"import React, { useEffect, useState, Component } from \"react\";\r\nimport { AxiosInstance } from \"../../App\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport AfterWorkout from \"./AfterWorkout\";\r\nimport DoWorkOut from \"./DoWorkOut\";\r\nimport ExerciseCard from \"./ExerciseCard/ExerciseCard\";\r\n\r\nconst DoWorkOutSummary = (props) => {\r\n  const [IsLoading, setIsLoading] = useState(true);\r\n  const [WorkoutProgress, setWorkoutProgress] = useState({\r\n    didStart: false,\r\n    didEnd: false,\r\n    currentExerciseNo: 0,\r\n    maxExerciseNumber: 0,\r\n  });\r\n  const [WorkoutSummaryData, setWorkoutSummaryData] = useState({});\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    AxiosInstance.get(\"/get-workout-from-id\", {\r\n      params: {\r\n        workoutId: props.match.params.id,\r\n      },\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n      setWorkoutSummaryData(res.data);\r\n      setWorkoutProgress({\r\n        ...WorkoutProgress,\r\n        maxExerciseNumber: res.data.exercise.length,\r\n      });\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n  const nextExercise = () => {\r\n    if (\r\n      WorkoutProgress.currentExerciseNo + 1 <\r\n      WorkoutProgress.maxExerciseNumber\r\n    )\r\n      setWorkoutProgress({\r\n        ...WorkoutProgress,\r\n        currentExerciseNo: WorkoutProgress.currentExerciseNo + 1,\r\n      });\r\n    else {\r\n      // end of workout,\r\n      // sending data to backend in AfterWorkout\r\n      setWorkoutProgress({\r\n        ...WorkoutProgress,\r\n        didEnd: true,\r\n        currentExerciseNo: 0,\r\n      });\r\n    }\r\n  };\r\n  const prevExercise = () => {\r\n    if (WorkoutProgress.currentExerciseNo - 1 > 0)\r\n      setWorkoutProgress({\r\n        ...WorkoutProgress,\r\n        currentExerciseNo: WorkoutProgress.currentExerciseNo - 1,\r\n      });\r\n  };\r\n  if (WorkoutProgress.didEnd)\r\n    return <AfterWorkout id={WorkoutSummaryData.id} />;\r\n  if (WorkoutProgress.didStart)\r\n    return (\r\n      <DoWorkOut\r\n        exercise={\r\n          WorkoutSummaryData.exercise[WorkoutProgress.currentExerciseNo]\r\n        }\r\n        activeTime={WorkoutSummaryData.exercise_time}\r\n        restTime={WorkoutSummaryData.rest_time}\r\n        next={nextExercise}\r\n        prev={prevExercise}\r\n      />\r\n    );\r\n  let exercises;\r\n  if (IsLoading) exercises = <Loader />;\r\n  else\r\n    exercises = (\r\n      <>\r\n        <p className=\"is-size-6 l-opacity has-text-centered\">\r\n          Total Workout Time : {Math.floor(WorkoutSummaryData.total_time / 60)}\r\n          min\r\n        </p>\r\n        <hr />\r\n        <div className=\"columns is-multiline\">\r\n          {WorkoutSummaryData.exercise.map((item, i) => (\r\n            <div className=\"column is-4\" key={i}>\r\n              <ExerciseCard name={item.name} muscle={item.muscle} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  // gotta create a arr of all the exer and make a current exercise index :then loop through that list one by one and complete all the exercise with rest time included.\r\n  return (\r\n    <div className=\"section\">\r\n      <p className=\"is-size-3-desktop is-size-4-touch has-text-weight-bold has-text-centered \">\r\n        WorkOut Summary\r\n      </p>\r\n      {exercises}\r\n      <nav className=\"navbar is-fixed-bottom is-flex is-justify-content-center\">\r\n        <div className=\"navbar-item\">\r\n          <button\r\n            onClick={setWorkoutProgress.bind(this, {\r\n              ...WorkoutProgress,\r\n              didStart: true,\r\n            })}\r\n            style={{ borderRadius: \"50%\" }}\r\n            className=\"button is-large is-danger\"\r\n          >\r\n            <span className=\"icon \">\r\n              <i className=\"fas fa-dumbbell\"></i>\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoWorkOutSummary;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\ExerciseCard\\ExerciseCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\PostCard\\PostCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\NewPost\\NewPost.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchModal\\UserSearchModal.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserPanel.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\MainFeed\\MainFeed.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchModal\\SearchedUserListItem\\SearchedUserListItem.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchInput\\UserSearchInput.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\NotFound\\NotFound.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Profile\\Menu.js",["201"],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\DoWorkOut.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\AfterWorkout.js",["202"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AxiosInstance } from \"../../App\";\r\nimport img from \"../../assets/img/workoutComplete.gif\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nconst AfterWorkout = ({ id }) => {\r\n  console.log(id);\r\n  const [IsLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    // send data to backend\r\n    AxiosInstance.delete(\"/workout-complete\", {\r\n      params: {\r\n        workoutDateId: id,\r\n      },\r\n    }).then((res) => {\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n  let workout;\r\n  if (IsLoading) workout = <Loader>Saving Your Workout ... </Loader>;\r\n  else\r\n    workout = (\r\n      <div className=\"buttons is-centered\">\r\n        <Link to=\"/workouts/pending\" className=\"button is-medium\">\r\n          Workout More\r\n        </Link>\r\n        <Link to=\"/feed\" className=\"button is-medium\">\r\n          Go to feed\r\n        </Link>\r\n      </div>\r\n    );\r\n  return (\r\n    <div className=\"is-flex is-justify-content-center\">\r\n      <div>\r\n        <div className=\"is-flex is-justify-content-center\">\r\n          <figure className=\"image\">\r\n            <img src={img} alt=\"\" />\r\n          </figure>\r\n        </div>\r\n        <br />\r\n        {workout}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AfterWorkout;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\Hooks\\fetchWithCache.js",["203"],"import { useEffect, useState } from \"react\";\r\nimport { AxiosInstance, CACHE } from \"../App\";\r\n// caching with react-router match params and not the api-url since the api-url can be long and hard to delete at differnt places.\r\nconst useFetchWithCache = (url, cachePath) => {\r\n  const [State, setState] = useState({\r\n    isLoading: true,\r\n    data: null,\r\n  });\r\n  //    for updating the data, if you wanna filter the data the use it.\r\n  const setData = (data) => {\r\n    CACHE.set(cachePath, data);\r\n    setState({\r\n      ...State,\r\n      data: data,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (CACHE.has(cachePath)) {\r\n      console.log(\"using cache\");\r\n      setState({\r\n        isLoading: false,\r\n        data: CACHE.get(cachePath),\r\n      });\r\n    } else\r\n      AxiosInstance.get(url).then((res) => {\r\n        CACHE.set(cachePath, res.data);\r\n        setState({\r\n          isLoading: false,\r\n          data: res.data,\r\n        });\r\n      });\r\n  }, []);\r\n  return [State.data, State.isLoading, setData];\r\n};\r\n\r\nexport default useFetchWithCache;\r\n",{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":30,"column":55,"nodeType":"210","messageId":"211","endLine":30,"endColumn":57},{"ruleId":"212","severity":1,"message":"213","line":86,"column":6,"nodeType":"214","endLine":86,"endColumn":23,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"216","severity":1,"message":"220","line":1,"column":28,"nodeType":"218","messageId":"219","endLine":1,"endColumn":34},{"ruleId":"216","severity":1,"message":"221","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":14},{"ruleId":"212","severity":1,"message":"222","line":30,"column":6,"nodeType":"214","endLine":30,"endColumn":25,"suggestions":"223"},{"ruleId":"208","severity":1,"message":"209","line":43,"column":34,"nodeType":"210","messageId":"211","endLine":43,"endColumn":36},{"ruleId":"208","severity":1,"message":"209","line":21,"column":27,"nodeType":"210","messageId":"211","endLine":21,"endColumn":29},{"ruleId":"216","severity":1,"message":"217","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"216","severity":1,"message":"224","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":23},{"ruleId":"216","severity":1,"message":"217","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"216","severity":1,"message":"224","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":23},{"ruleId":"216","severity":1,"message":"217","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"216","severity":1,"message":"225","line":1,"column":28,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},{"ruleId":"216","severity":1,"message":"224","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":23},{"ruleId":"216","severity":1,"message":"226","line":1,"column":38,"nodeType":"218","messageId":"219","endLine":1,"endColumn":47},{"ruleId":"212","severity":1,"message":"227","line":32,"column":6,"nodeType":"214","endLine":32,"endColumn":8,"suggestions":"228"},{"ruleId":"212","severity":1,"message":"229","line":36,"column":6,"nodeType":"214","endLine":36,"endColumn":16,"suggestions":"230"},{"ruleId":"212","severity":1,"message":"231","line":19,"column":6,"nodeType":"214","endLine":19,"endColumn":8,"suggestions":"232"},{"ruleId":"212","severity":1,"message":"233","line":32,"column":6,"nodeType":"214","endLine":32,"endColumn":8,"suggestions":"234"},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'AuthState.isAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["237"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'AllExercises.length'. Either include it or remove the dependency array.",["238"],"'AxiosInstance' is defined but never used.","'useState' is defined but never used.","'Component' is defined but never used.","React Hook useEffect has missing dependencies: 'WorkoutProgress' and 'props.match.params.id'. Either include them or remove the dependency array. You can also do a functional update 'setWorkoutProgress(W => ...)' if you only need 'WorkoutProgress' in the 'setWorkoutProgress' call.",["239"],"React Hook useEffect has missing dependencies: 'pathname' and 'username'. Either include them or remove the dependency array. If 'setData' needs the current value of 'pathname', you can also switch to useReducer instead of useState and read 'pathname' in the reducer.",["240"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["241"],"React Hook useEffect has missing dependencies: 'cachePath' and 'url'. Either include them or remove the dependency array. If 'setState' needs the current value of 'cachePath', you can also switch to useReducer instead of useState and read 'cachePath' in the reducer.",["242"],"no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [AuthState.isAuthenticated, AuthState.token]",{"range":"255","text":"256"},"Update the dependencies array to be: [AllExercises.length, match.params.type]",{"range":"257","text":"258"},"Update the dependencies array to be: [WorkoutProgress, props.match.params.id]",{"range":"259","text":"260"},"Update the dependencies array to be: [menuType, pathname, username]",{"range":"261","text":"262"},"Update the dependencies array to be: [id]",{"range":"263","text":"264"},"Update the dependencies array to be: [cachePath, url]",{"range":"265","text":"266"},[2715,2732],"[AuthState.isAuthenticated, AuthState.token]",[1302,1321],"[AllExercises.length, match.params.type]",[1050,1052],"[WorkoutProgress, props.match.params.id]",[1270,1280],"[menuType, pathname, username]",[581,583],"[id]",[951,953],"[cachePath, url]"]