[{"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\index.js":"1","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\App.js":"2","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\reportWebVitals.js":"3","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Home\\Home.js":"4","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Auth\\Auth.js":"5","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Logo\\Logo.js":"6","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Auth\\InputList\\InputList.js":"7","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Input\\Input.js":"8","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\ErrorMsg\\ErrorMsg.js":"9","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\WorkOuts\\WorkOuts.js":"10","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\Feed.js":"11","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Profile\\Profile.js":"12","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Navbar\\Navbar.js":"13","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\AuthContext.js":"14","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\WorkOutCard\\WorkOutCard.js":"15","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorLogin\\InstructorLogin.js":"16","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorWorkouts\\InstructorWorkouts.js":"17","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\InstructorStudents.js":"18","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\UserProfileCard\\UserProfileCard.js":"19","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Loader\\Loader.js":"20","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\StudentModal\\StudentModal.js":"21","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\InstructorNewWorkout.js":"22","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiThree\\StateUiThree.js":"23","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiOne\\StateUiOne.js":"24","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiTwo\\StateUiTwo.js":"25","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\NewStudentModal\\NewStudentModal.js":"26","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\NewStudentModal\\StudentCard\\StudentCard.js":"27","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\AssignWorkoutModal\\AssignWorkoutModal.js":"28","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\AssignWorkoutModal\\WorkoutCard\\WorkoutCard.js":"29","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\DoWorkOutSummary.js":"30","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\ExerciseCard\\ExerciseCard.js":"31","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\PostCard\\PostCard.js":"32","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\NewPost\\NewPost.js":"33","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchModal\\UserSearchModal.js":"34","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserPanel.js":"35","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\MainFeed\\MainFeed.js":"36","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchModal\\SearchedUserListItem\\SearchedUserListItem.js":"37","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchInput\\UserSearchInput.js":"38","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\NotFound\\NotFound.js":"39","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Profile\\Menu.js":"40","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\DoWorkOut.js":"41","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\AfterWorkout.js":"42","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\Hooks\\fetchWithCache.js":"43"},{"size":593,"mtime":1613787991785,"results":"44","hashOfConfig":"45"},{"size":4305,"mtime":1613293345736,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"45"},{"size":175,"mtime":1609778243535,"results":"48","hashOfConfig":"45"},{"size":2138,"mtime":1613288072444,"results":"49","hashOfConfig":"45"},{"size":244,"mtime":1609782036953,"results":"50","hashOfConfig":"45"},{"size":4594,"mtime":1613285955646,"results":"51","hashOfConfig":"45"},{"size":645,"mtime":1610388807900,"results":"52","hashOfConfig":"45"},{"size":570,"mtime":1610359228846,"results":"53","hashOfConfig":"45"},{"size":2830,"mtime":1613329004669,"results":"54","hashOfConfig":"45"},{"size":338,"mtime":1613303331156,"results":"55","hashOfConfig":"45"},{"size":1948,"mtime":1613618106787,"results":"56","hashOfConfig":"45"},{"size":3881,"mtime":1613287704659,"results":"57","hashOfConfig":"45"},{"size":113,"mtime":1609913879656,"results":"58","hashOfConfig":"45"},{"size":666,"mtime":1613788825313,"results":"59","hashOfConfig":"45"},{"size":3992,"mtime":1611906686504,"results":"60","hashOfConfig":"45"},{"size":2506,"mtime":1613362349396,"results":"61","hashOfConfig":"45"},{"size":4078,"mtime":1613716330620,"results":"62","hashOfConfig":"45"},{"size":943,"mtime":1610904890810,"results":"63","hashOfConfig":"45"},{"size":537,"mtime":1613329342981,"results":"64","hashOfConfig":"45"},{"size":1813,"mtime":1611983255487,"results":"65","hashOfConfig":"45"},{"size":3888,"mtime":1613714812190,"results":"66","hashOfConfig":"45"},{"size":2333,"mtime":1610177848863,"results":"67","hashOfConfig":"45"},{"size":1027,"mtime":1611906615830,"results":"68","hashOfConfig":"45"},{"size":4195,"mtime":1613722494622,"results":"69","hashOfConfig":"45"},{"size":2692,"mtime":1613717767743,"results":"70","hashOfConfig":"45"},{"size":1133,"mtime":1611984166845,"results":"71","hashOfConfig":"45"},{"size":1690,"mtime":1613717204386,"results":"72","hashOfConfig":"45"},{"size":1373,"mtime":1613618811775,"results":"73","hashOfConfig":"45"},{"size":3695,"mtime":1613786731167,"results":"74","hashOfConfig":"45"},{"size":674,"mtime":1613723557977,"results":"75","hashOfConfig":"45"},{"size":976,"mtime":1611906641208,"results":"76","hashOfConfig":"45"},{"size":1697,"mtime":1613732227066,"results":"77","hashOfConfig":"45"},{"size":2077,"mtime":1613307528787,"results":"78","hashOfConfig":"45"},{"size":1980,"mtime":1613307097382,"results":"79","hashOfConfig":"45"},{"size":1161,"mtime":1613307009852,"results":"80","hashOfConfig":"45"},{"size":2330,"mtime":1611906662698,"results":"81","hashOfConfig":"45"},{"size":1143,"mtime":1613307181948,"results":"82","hashOfConfig":"45"},{"size":624,"mtime":1611383209498,"results":"83","hashOfConfig":"45"},{"size":3330,"mtime":1613720563887,"results":"84","hashOfConfig":"45"},{"size":3736,"mtime":1613788382629,"results":"85","hashOfConfig":"45"},{"size":1309,"mtime":1613786743424,"results":"86","hashOfConfig":"45"},{"size":1093,"mtime":1613409257747,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b3a42h",{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"93"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"93"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"93"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"93"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"93"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"93"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"93"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"93"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"93"},"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\index.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\App.js",["186","187"],"import \"../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport \"./assets/css/bulma/bulma.css\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router\";\nimport Home from \"./pages/Home/Home\";\nimport Auth from \"./pages/Auth/Auth\";\nimport WorkOuts from \"./pages/WorkOuts/WorkOuts\";\nimport Feed from \"./pages/Feed/Feed\";\nimport Profile from \"./pages/Profile/Profile\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport axios from \"axios\";\nimport AuthContext from \"./AuthContext\";\nimport { useMemo, useState } from \"react\";\nimport InstructorLogin from \"./pages/InstructorLogin/InstructorLogin\";\nimport InstructorWorkouts from \"./pages/InstructorWorkouts/InstructorWorkouts\";\nimport InstructorStudents from \"./pages/InstructorStudents/InstructorStudents\";\nimport InstructorNewWorkout from \"./pages/InstructorNewWorkout/InstructorNewWorkout\";\nimport DoWorkOutSummary from \"./pages/DoWorkOutSummary/DoWorkOutSummary\";\nimport NewPost from \"./pages/NewPost/NewPost\";\nimport NotFound from \"./pages/NotFound/NotFound\";\n\nexport const AxiosInstance = axios.create({\n  baseURL: \"http://127.0.0.1:8000/\",\n  timeout: 3000,\n});\n\nconst token = localStorage.getItem(\"token\");\nconst username = localStorage.getItem(\"username\");\nconst email = localStorage.getItem(\"email\");\nconst instructor = localStorage.getItem(\"instructor\") == \"true\" ? true : false;\n\nexport const CACHE = new Map();\n\nlet initialState = {\n  isAuthenticated: false,\n  token: \"\",\n  username: \"\",\n  email: \"\",\n  isInstructor: false,\n};\nif (token && username && email) {\n  initialState = {\n    isAuthenticated: true,\n    token: token,\n    username: username,\n    email: email,\n    isInstructor: instructor,\n  };\n}\n\nfunction App() {\n  const [AuthState, setAuthState] = useState(initialState);\n  // login, logout ...\n  const handleLogin = (token, username, email, instructor = false) => {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"username\", username);\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"instructor\", instructor.toString());\n    setAuthState({\n      isAuthenticated: true,\n      token: token,\n      username: username,\n      email: email,\n      isInstructor: instructor,\n    });\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"email\");\n    setAuthState({\n      isAuthenticated: false,\n      token: \"\",\n      username: \"\",\n      email: \"\",\n      isInstructor: false,\n    });\n  };\n  useMemo(() => {\n    AxiosInstance.interceptors.request.use((req) => {\n      if (AuthState.isAuthenticated) {\n        req.headers.Authorization = `Token ${AuthState.token}`;\n      }\n      return req;\n    });\n  }, [AuthState.token]);\n  return (\n    <AuthContext.Provider\n      value={{ ...AuthState, login: handleLogin, logout: handleLogout }}\n    >\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        {/* user */}\n        <Route path=\"/auth/:type\" exact component={Auth} />\n        <Route path=\"/workouts/:type\" exact component={WorkOuts} />\n        <Route path=\"/feed\" exact component={Feed} />\n        <Route path=\"/new-post\" exact component={NewPost} />\n        <Route path=\"/profile/:username\" exact component={Profile} />\n        <Route\n          path=\"/profile/:username/workouts/:type\"\n          exact\n          component={Profile}\n        />\n        {/* instructor routes  */}\n        <Route\n          path=\"/auth/instructor/login\"\n          exact\n          component={InstructorLogin}\n        />\n        <Route\n          path=\"/instructor/students\"\n          exact\n          component={InstructorStudents}\n        />\n        <Route\n          path=\"/instructor/assign-workout/:studentUsername\"\n          exact\n          component={InstructorStudents}\n        />\n        <Route\n          path=\"/instructor/workouts/new/:type\"\n          exact\n          component={InstructorNewWorkout}\n        />\n        <Route\n          path=\"/instructor/workouts\"\n          exact\n          component={InstructorWorkouts}\n        />\n        <Route path=\"/workout/:id\" exact component={DoWorkOutSummary} />\n        <Route path=\"/not-found\" component={NotFound} />\n        <Route component={NotFound} />\n      </Switch>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n",["188","189"],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\reportWebVitals.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Home\\Home.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Auth\\Auth.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Logo\\Logo.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Auth\\InputList\\InputList.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Input\\Input.js",["190","191"],"import React, { useEffect, useRef } from \"react\";\r\n\r\nconst Input = (props) => {\r\n  let invalidClass = \"\";\r\n  if (!props.valid && props.touched) {\r\n    invalidClass = \"is-primary\";\r\n  }\r\n  return (\r\n    <div className=\"field\">\r\n      <div className=\"control\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={props.change}\r\n          value={props.value}\r\n          className={\"input \" + invalidClass}\r\n          {...props.config}\r\n        />\r\n      </div>\r\n      {!props.valid && props.touched ? (\r\n        <p className=\"help is-danger\">{props.errorMsg}</p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Input);\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\ErrorMsg\\ErrorMsg.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\WorkOuts\\WorkOuts.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\Feed.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Profile\\Profile.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Navbar\\Navbar.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\AuthContext.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\WorkOutCard\\WorkOutCard.js",["192"],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorLogin\\InstructorLogin.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorWorkouts\\InstructorWorkouts.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\InstructorStudents.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\UserProfileCard\\UserProfileCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Loader\\Loader.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\StudentModal\\StudentModal.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\InstructorNewWorkout.js",["193","194"],"import React, { useEffect, useState } from \"react\";\r\nimport { AxiosInstance } from \"../../App\";\r\nimport StateUiOne from \"./StateUiOne/StateUiOne\";\r\nimport StateUiTwo from \"./StateUiTwo/StateUiTwo\";\r\nimport StateUiThree from \"./StateUiThree/StateUiThree\";\r\n//  nme , exercices , rest time and exercise time\r\n// 3 different states : name , exercies and time\r\n// 2 way binding is very nessesary because : lets say the user goes back from state 3 to state 1 in that case we the same data to show and not some blank thing\r\nconst InstructorNewWorkout = ({ history, match }) => {\r\n  const [StateNo, setStateNo] = useState(1);\r\n  const [Data, setData] = useState({\r\n    name: \"\",\r\n    activeTime: 0,\r\n    restTime: 0,\r\n    touched: false, //\r\n  });\r\n  // the exercises which have a\r\n  const [AllExercises, setAllExercises] = useState([]);\r\n  useEffect(() => {\r\n    // showing state according to the url\r\n    if (match.params.type === \"name\") setStateNo(1);\r\n    if (match.params.type === \"exercises\") setStateNo(2);\r\n    if (match.params.type === \"time\") setStateNo(3);\r\n    // setData({ ...Data, touched: false });\r\n    //   get exercise data from backend\r\n    if (!!!AllExercises.length)\r\n      AxiosInstance.get(\"get-all-exercises-name\").then((res) => {\r\n        setAllExercises(res.data);\r\n      });\r\n  }, [match.params.type]);\r\n  const handleExerciseCheckbox = (index, event) => {\r\n    // handle the selection of exercises\r\n    const updatedExercises = [...AllExercises];\r\n    const updatedExercise = { ...AllExercises[index] };\r\n    if (event.target.checked) updatedExercise.checked = true;\r\n    else updatedExercise.checked = false;\r\n    updatedExercises[index] = updatedExercise;\r\n    setAllExercises(updatedExercises);\r\n  };\r\n  const handleRemoveExercise = (id) => {\r\n    const updatedExercises = [...AllExercises];\r\n    for (let i = 0; i < updatedExercises.length; i++) {\r\n      if (updatedExercises[i].id == id) {\r\n        const updatedExercise = { ...updatedExercises[i] };\r\n        updatedExercise.checked = false;\r\n        updatedExercises[i] = updatedExercise;\r\n        setAllExercises(updatedExercises);\r\n        break;\r\n      }\r\n    }\r\n    setAllExercises(updatedExercises);\r\n  };\r\n  const handleInputChange = (item, value) => {\r\n    const data = { ...Data };\r\n    data[item] = value;\r\n    data.touched = true;\r\n    setData(data);\r\n  };\r\n  const handleSubmit = () => {\r\n    const formdata = new FormData();\r\n    formdata.append(\"activeTime\", Data.activeTime.toString());\r\n    formdata.append(\"restTime\", Data.restTime.toString());\r\n    formdata.append(\"name\", Data.name);\r\n    const exerciseIds = [];\r\n    for (let item of AllExercises) {\r\n      if (item.checked) exerciseIds.push(item.id);\r\n    }\r\n    formdata.append(\"exercises\", exerciseIds.join(\",\"));\r\n    AxiosInstance.post(\"/create-instructor-workout\", formdata).then((res) => {\r\n      history.push(\"/instructor/workouts\");\r\n    });\r\n  };\r\n  let stateUi;\r\n  if (StateNo === 1)\r\n    stateUi = (\r\n      <StateUiOne\r\n        value={Data.name}\r\n        handleInput={handleInputChange}\r\n        touched={Data.touched}\r\n        next={() => {\r\n          history.push(\"exercises\");\r\n        }}\r\n      />\r\n    );\r\n  else if (StateNo === 2)\r\n    stateUi = (\r\n      <StateUiTwo\r\n        allExercises={AllExercises}\r\n        exerciseChangeHandler={handleExerciseCheckbox}\r\n        removeExercise={handleRemoveExercise}\r\n        next={() => {\r\n          history.push(\"time\");\r\n        }}\r\n      />\r\n    );\r\n  else\r\n    stateUi = (\r\n      <StateUiThree\r\n        activeTime={Data.activeTime}\r\n        restTime={Data.restTime}\r\n        change={handleInputChange}\r\n        done={handleSubmit}\r\n      />\r\n    );\r\n  return (\r\n    <div className=\"section\">\r\n      <p className=\"is-size-2 has-text-weight-bold has-text-centered\">\r\n        New Workout\r\n      </p>\r\n      {stateUi}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorNewWorkout;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiThree\\StateUiThree.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiOne\\StateUiOne.js",["195"],"import React from \"react\";\r\n\r\nconst StateUiOne = ({ handleInput, value, touched, next }) => (\r\n  <div\r\n    className=\"center-vertically\"\r\n    style={{ height: \"60vh\", justifyContent: \"center\" }}\r\n  >\r\n    <div className=\"field has-addons\">\r\n      <div className=\"control\">\r\n        <label className=\" button is-static \">Workout Name</label>\r\n      </div>\r\n      <div className=\"control\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={(evnt) => {\r\n            handleInput(\"name\", evnt.target.value);\r\n          }}\r\n          value={value}\r\n          className=\"input\"\r\n        />\r\n        {touched && value == 0 && (\r\n          <p className=\"help is-danger\">Enter A Valid Name</p>\r\n        )}\r\n      </div>\r\n      <div className=\"control\">\r\n        <button\r\n          disabled={!(value.length > 0)}\r\n          className=\"button is-link is-light is-outlined\"\r\n          onClick={next}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n// @ts-ignore\r\nexport default StateUiOne;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiTwo\\StateUiTwo.js",["196","197"],"import React, { useEffect, useState } from \"react\";\r\nimport { AxiosInstance } from \"../../../App\";\r\n\r\nconst StateUiTwo = ({\r\n  allExercises,\r\n  exerciseChangeHandler,\r\n  next,\r\n  removeExercise,\r\n}) => {\r\n  // showing and removing modal using css since i wann preserve the state of the input checkboxes\r\n  const [ShowModal, setShowModal] = useState(false);\r\n\r\n  //   const [SelectedExercises, setSelectedExercises] = useState([]);\r\n  // functionality :\r\n  // 1. get all the exercies and show em in a modal,\r\n  // 2. remove exercies\r\n  // 3. pass all the ids of the exercies in a method passes\r\n  const selectedExercises = allExercises.filter((item) => !!item.checked);\r\n  console.log(selectedExercises);\r\n  let exercises;\r\n  if (!!selectedExercises.length)\r\n    exercises = (\r\n      <div className=\"columns is-multiline is-mobile\">\r\n        {selectedExercises.map((item, i) => (\r\n          <ExerciseCard\r\n            name={item.name}\r\n            key={i}\r\n            muscles={item.muscle}\r\n            remove={removeExercise.bind(this, item.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  else\r\n    exercises = (\r\n      <p className=\"is-size-5 \">You Have Not Selected Any Exercise</p>\r\n    );\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"button is-link is-light is-outlined  mb-3\"\r\n        onClick={setShowModal.bind(this, true)}\r\n      >\r\n        <span className=\"icon\">\r\n          <i className=\"fas fa-plus\"></i>\r\n        </span>\r\n        <span>Add Exercise</span>\r\n      </button>\r\n      <p className=\"is-size-4 mb-3 has-text-weight-bold\">Workout Exercises</p>\r\n      {exercises}\r\n      <div className=\"section has-text-centered\">\r\n        <button className=\"button is-link is-large\" onClick={next}>\r\n          <span>Next</span>\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-chevron-right\"></i>\r\n          </span>\r\n        </button>\r\n      </div>\r\n      <Modal\r\n        exercise={allExercises}\r\n        changed={exerciseChangeHandler}\r\n        close={setShowModal.bind(this, false)}\r\n        isActive={ShowModal && true}\r\n        done={setShowModal.bind(this, false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst ExerciseCard = ({ name, muscles, remove }) => (\r\n  <div className=\"column is-3-desktop is-6-touch\">\r\n    <div className=\"box red-gradient\">\r\n      <div className=\"columns\">\r\n        <div className=\"column is-8\">\r\n          <p className=\"is-size-4 has-text-weight-semibold\">{name}</p>\r\n          <p>{muscles}</p>\r\n        </div>\r\n        <div className=\"column has-text-right\">\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <button\r\n              onClick={remove}\r\n              className=\"button ml-5 is-danger is-medium\"\r\n            >\r\n              <span className=\"icon \">\r\n                <i className=\"fas fa-times\"></i>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Modal = ({ exercise, changed, close, done, isActive = false }) => (\r\n  <div className={\"modal \" + (isActive && \"is-active\")}>\r\n    <div className=\"modal-background\" onClick={close}></div>\r\n    <div className=\"modal-card\">\r\n      <header className=\"modal-card-head\">\r\n        <p className=\"modal-card-title\">Exercises</p>\r\n        <button className=\"delete\"></button>\r\n      </header>\r\n      <section className=\"modal-card-body has-background-light\">\r\n        {exercise.map((item, i) => (\r\n          <div key={i}>\r\n            <label className=\"checkbox is-unselectable\">\r\n              <input\r\n                checked={item.checked ? true : false}\r\n                onChange={changed.bind(this, i)}\r\n                type=\"checkbox\"\r\n                id=\"\"\r\n                className=\"mr-2\"\r\n              />\r\n              <span className=\"is-size-5\">{item.name}</span>\r\n            </label>\r\n            <br />\r\n          </div>\r\n        ))}\r\n      </section>\r\n      <footer className=\"modal-card-foot\">\r\n        <button className=\"button is-link\" onClick={done}>\r\n          Done\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default StateUiTwo;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\NewStudentModal\\NewStudentModal.js",["198","199"],"import React, { useEffect, useState } from \"react\";\r\nimport { AxiosInstance } from \"../../../App\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\nimport useFetchWithCache from \"../../../Hooks/fetchWithCache\";\r\nimport StudentCard from \"./StudentCard/StudentCard\";\r\n\r\nconst NewStudentModal = ({ closeModal }) => {\r\n  const [data, isLoading] = useFetchWithCache(\r\n    \"/get-students-without-instructors\",\r\n    \"get-students-without-instructors\"\r\n  );\r\n  const [SearchQuery, setSearchQuery] = useState(\"\");\r\n  // const [Students, setStudents] = useState([]);\r\n  // const [IsLoading, setIsLoading] = useState(true);\r\n  let students;\r\n  if (isLoading) students = <Loader />;\r\n  else if (!!data.length)\r\n    students = data\r\n      .filter(\r\n        (item) =>\r\n          item.username.toLowerCase().includes(SearchQuery) ||\r\n          item.status.toLowerCase().includes(SearchQuery)\r\n      )\r\n      .map((item) => (\r\n        <StudentCard\r\n          key={item.username}\r\n          name={item.username}\r\n          status={item.status}\r\n          closeModal={closeModal}\r\n          id={item.id}\r\n        />\r\n      ));\r\n  else students = <p className=\"is-size-4\">No Students Found</p>;\r\n  const handleInput = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"modal is-active\">\r\n      <div className=\"modal-background\" onClick={closeModal}></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head\">\r\n          <p className=\"modal-card-title has-text-weight-semibold\">\r\n            New Student\r\n          </p>\r\n          <button className=\"delete\" onClick={closeModal}></button>\r\n        </header>\r\n        <section className=\"modal-card-body pt-0\">\r\n          <div\r\n            className=\"has-background-light pt-3\"\r\n            style={{ position: \"sticky\", top: \"0px\", zIndex: 100 }}\r\n          >\r\n            <div className=\"field\">\r\n              <div className=\"control has-icons-left\">\r\n                <input\r\n                  onChange={handleInput}\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  placeholder=\"search students\"\r\n                />\r\n                <span className=\"icon is-left\">\r\n                  <i className=\"fas fa-search\"></i>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p className=\"is-size-5 my-2\">Students</p>\r\n          {students}\r\n        </section>\r\n        <footer className=\"modal-card-foot\">\r\n          <button className=\"button is-link\" onClick={closeModal}>\r\n            Done\r\n          </button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewStudentModal;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\NewStudentModal\\StudentCard\\StudentCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\AssignWorkoutModal\\AssignWorkoutModal.js",["200","201","202"],"import React, { useEffect, useState } from \"react\";\r\nimport { AxiosInstance } from \"../../../App\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\nimport useFetchWithCache from \"../../../Hooks/fetchWithCache\";\r\nimport WorkOutCard from \"./WorkoutCard/WorkoutCard\";\r\n\r\nconst AssignWorkoutModal = ({ name, closeModal }) => {\r\n  console.log(name);\r\n  // caching wtth the same name as api route so can use cached data from /instructor/workouts. will save one api request\r\n  const [data, isLoading] = useFetchWithCache(\r\n    \"/get-instructor-workouts\",\r\n    \"/get-instructor-workouts\"\r\n  );\r\n\r\n  let workouts;\r\n  if (isLoading) workouts = <Loader />;\r\n  else\r\n    workouts = data.map((item, i) => (\r\n      <WorkOutCard\r\n        key={i}\r\n        name={item.details.name}\r\n        muscles={item.details.muscles.join(\", \")}\r\n        time={item.details.totalTime}\r\n        username={name}\r\n        workoutId={item.details.id}\r\n        closeModal={closeModal}\r\n      />\r\n    ));\r\n  return (\r\n    <div className=\"modal is-active\">\r\n      <div className=\"modal-background\" onClick={closeModal}></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head\">\r\n          <p className=\"modal-card-title\">\r\n            Assign Workout to{\" \"}\r\n            <span className=\"has-text-weight-bold\">{name}</span>\r\n          </p>\r\n          <button className=\"delete\" onClick={closeModal}></button>\r\n        </header>\r\n        <div className=\"modal-card-body \">{workouts}</div>\r\n        <footer className=\"modal-card-foot\">\r\n          <button className=\"button is-link\">Done</button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignWorkoutModal;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\AssignWorkoutModal\\WorkoutCard\\WorkoutCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\DoWorkOutSummary.js",["203","204"],"import React, { useEffect, useState, Component } from \"react\";\r\nimport { AxiosInstance } from \"../../App\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport AfterWorkout from \"./AfterWorkout\";\r\nimport DoWorkOut from \"./DoWorkOut\";\r\nimport ExerciseCard from \"./ExerciseCard/ExerciseCard\";\r\n\r\nconst DoWorkOutSummary = ({ match }) => {\r\n  const [IsLoading, setIsLoading] = useState(true);\r\n  const [WorkoutProgress, setWorkoutProgress] = useState({\r\n    didStart: false,\r\n    didEnd: false,\r\n    currentExerciseNo: 0,\r\n    maxExerciseNumber: 0,\r\n  });\r\n  const [WorkoutSummaryData, setWorkoutSummaryData] = useState({\r\n    exercise: [],\r\n    exercise_time: 0,\r\n    id: 0,\r\n    instructor: 0,\r\n    name: \"\",\r\n    rest_time: 0,\r\n    total_time: 0,\r\n  });\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    AxiosInstance.get(\"/get-workout-from-id\", {\r\n      params: {\r\n        workoutId: match.params.id,\r\n      },\r\n    }).then((res) => {\r\n      setWorkoutSummaryData(res.data);\r\n      setWorkoutProgress({\r\n        ...WorkoutProgress,\r\n        maxExerciseNumber: res.data.exercise.length,\r\n      });\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n  const nextExercise = () => {\r\n    if (\r\n      WorkoutProgress.currentExerciseNo + 1 <\r\n      WorkoutProgress.maxExerciseNumber\r\n    )\r\n      setWorkoutProgress({\r\n        ...WorkoutProgress,\r\n        currentExerciseNo: WorkoutProgress.currentExerciseNo + 1,\r\n      });\r\n    else {\r\n      // end of workout,\r\n      // sending data to backend in AfterWorkout\r\n      setWorkoutProgress({\r\n        ...WorkoutProgress,\r\n        didEnd: true,\r\n        currentExerciseNo: 0,\r\n      });\r\n    }\r\n  };\r\n  const prevExercise = () => {\r\n    if (WorkoutProgress.currentExerciseNo - 1 >= 0)\r\n      setWorkoutProgress({\r\n        ...WorkoutProgress,\r\n        currentExerciseNo: WorkoutProgress.currentExerciseNo - 1,\r\n      });\r\n  };\r\n  if (WorkoutProgress.didEnd)\r\n    return <AfterWorkout id={WorkoutSummaryData.id} />;\r\n  if (WorkoutProgress.didStart)\r\n    return (\r\n      <DoWorkOut\r\n        exercise={\r\n          WorkoutSummaryData.exercise[WorkoutProgress.currentExerciseNo]\r\n        }\r\n        activeTime={WorkoutSummaryData.exercise_time}\r\n        restTime={WorkoutSummaryData.rest_time}\r\n        next={nextExercise}\r\n        prev={prevExercise}\r\n      />\r\n    );\r\n  let exercises;\r\n  if (IsLoading) exercises = <Loader />;\r\n  else\r\n    exercises = (\r\n      <>\r\n        <p className=\"is-size-6 l-opacity has-text-centered\">\r\n          Total Workout Time : {Math.floor(WorkoutSummaryData.total_time / 60)}\r\n          min\r\n        </p>\r\n        <hr />\r\n        <div className=\"columns is-multiline\">\r\n          {WorkoutSummaryData.exercise.map((item, i) => (\r\n            <div className=\"column is-4\" key={i}>\r\n              <ExerciseCard name={item.name} muscle={item.muscle} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  return (\r\n    <div className=\"section\">\r\n      <p className=\"is-size-3-desktop is-size-4-touch has-text-weight-bold has-text-centered \">\r\n        WorkOut Summary\r\n      </p>\r\n      {exercises}\r\n      <nav className=\"navbar is-fixed-bottom is-flex is-justify-content-center\">\r\n        <div className=\"navbar-item\">\r\n          <button\r\n            onClick={setWorkoutProgress.bind(this, {\r\n              ...WorkoutProgress,\r\n              didStart: true,\r\n            })}\r\n            className=\"button is-large is-danger\"\r\n          >\r\n            <span>Start Workout</span>\r\n            <span className=\"icon \">\r\n              <i className=\"fas fa-dumbbell\"></i>\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoWorkOutSummary;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\ExerciseCard\\ExerciseCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\PostCard\\PostCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\NewPost\\NewPost.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchModal\\UserSearchModal.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserPanel.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\MainFeed\\MainFeed.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchModal\\SearchedUserListItem\\SearchedUserListItem.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchInput\\UserSearchInput.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\NotFound\\NotFound.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Profile\\Menu.js",["205"],"import React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AxiosInstance, CACHE } from \"../../App\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport WorkOutCard from \"../../components/WorkOutCard/WorkOutCard\";\r\nimport PostCard from \"../Feed/PostCard/PostCard\";\r\n\r\nconst Menu = ({ posts, pathname, params }) => {\r\n  const [Data, setData] = useState([]);\r\n  const [IsLoading, setIsLoading] = useState(false);\r\n  const menuType = params.type;\r\n  const username = params.username;\r\n  useEffect(() => {\r\n    let urlEnding;\r\n    if (menuType === \"pending\") urlEnding = \"pending\";\r\n    else if (menuType === \"past\") urlEnding = \"past\";\r\n    else return; // user posts url\r\n    // setIsLoading(true);\r\n    console.log(CACHE.get(pathname));\r\n    console.log(pathname);\r\n    if (CACHE.has(pathname)) setData(CACHE.get(pathname));\r\n    else {\r\n      setIsLoading(true);\r\n      AxiosInstance.get(`get-user-workouts-by-username/${urlEnding}`, {\r\n        params: {\r\n          username: username,\r\n        },\r\n      }).then((res) => {\r\n        setData(res.data);\r\n        console.log(\"from menu\");\r\n        console.log(res.data);\r\n        setIsLoading(false);\r\n        CACHE.set(pathname, res.data);\r\n      });\r\n    }\r\n  }, [menuType]);\r\n  let grid;\r\n  if (IsLoading) grid = <Loader />;\r\n  else if (menuType === \"pending\" || menuType === \"past\")\r\n    if (!!Data.length)\r\n      grid = (\r\n        <div className=\"columns is-multiline is-mobile\">\r\n          {Data.map((item, i) => (\r\n            <div className=\"column is-4-desktop is-6-touch \" key={i}>\r\n              <WorkOutCard\r\n                title={item.workout.details.name}\r\n                muscles={item.workout.details.muscles.join(\", \")}\r\n                time={item.workout.details.totalTime}\r\n                id={item.workout.details.id}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    else\r\n      grid = <p className=\"is-title is-4 has-text-centered\">No Data Found</p>;\r\n  else if (!!posts.length)\r\n    grid = (\r\n      <div className=\"columns is-multiline is-mobile\">\r\n        {posts.map((item, i) => (\r\n          <div className=\"column is-4\" key={i}>\r\n            <PostCard />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  else grid = <p className=\"is-title is-4 has-text-centeredZ\">No Post Found</p>;\r\n  return (\r\n    <>\r\n      <div className=\"tabs is-centered\">\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              to={`/profile/${username}`}\r\n              exact\r\n              activeClassName=\"is-active\"\r\n            >\r\n              Posts\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to={`/profile/${username}/workouts/pending`}\r\n              exact\r\n              activeClassName=\"is-active\"\r\n            >\r\n              Pending Wokouts\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to={`/profile/${username}/workouts/past`}\r\n              exact\r\n              activeClassName=\"is-active\"\r\n            >\r\n              Past Workouts\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"columns is-centered\">\r\n        <div className=\"column is-8\">{grid}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\DoWorkOut.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\AfterWorkout.js",["206"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AxiosInstance } from \"../../App\";\r\nimport img from \"../../assets/img/workoutComplete.gif\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nconst AfterWorkout = ({ id }) => {\r\n  const [IsLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    // send data to backend\r\n    AxiosInstance.delete(\"/workout-complete\", {\r\n      params: {\r\n        workoutDateId: id,\r\n      },\r\n    }).then((res) => {\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n  let workout;\r\n  if (IsLoading) workout = <Loader>Saving Your Workout ... </Loader>;\r\n  else\r\n    workout = (\r\n      <div className=\"buttons is-centered\">\r\n        <Link to=\"/workouts/pending\" className=\"button is-medium\">\r\n          Workout More\r\n        </Link>\r\n        <Link to=\"/feed\" className=\"button is-medium\">\r\n          Go to feed\r\n        </Link>\r\n      </div>\r\n    );\r\n  return (\r\n    <div className=\"is-flex is-justify-content-center\">\r\n      <div>\r\n        <div className=\"is-flex is-justify-content-center\">\r\n          <figure className=\"image\">\r\n            <img src={img} alt=\"\" />\r\n          </figure>\r\n        </div>\r\n        <br />\r\n        {workout}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AfterWorkout;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\Hooks\\fetchWithCache.js",["207"],"import { useEffect, useState } from \"react\";\r\nimport { AxiosInstance, CACHE } from \"../App\";\r\n// caching with react-router match params and not the api-url since the api-url can be long and hard to delete at differnt places.\r\nconst useFetchWithCache = (url, cachePath) => {\r\n  const [State, setState] = useState({\r\n    isLoading: true,\r\n    data: null,\r\n  });\r\n  //    for updating the data, if you wanna filter the data the use it.\r\n  const setData = (data) => {\r\n    CACHE.set(cachePath, data);\r\n    setState({\r\n      ...State,\r\n      data: data,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (CACHE.has(cachePath)) {\r\n      console.log(\"using cache\");\r\n      setState({\r\n        isLoading: false,\r\n        data: CACHE.get(cachePath),\r\n      });\r\n    } else\r\n      AxiosInstance.get(url).then((res) => {\r\n        CACHE.set(cachePath, res.data);\r\n        setState({\r\n          isLoading: false,\r\n          data: res.data,\r\n        });\r\n      });\r\n  }, []);\r\n  return [State.data, State.isLoading, setData];\r\n};\r\n\r\nexport default useFetchWithCache;\r\n",{"ruleId":"208","severity":1,"message":"209","line":30,"column":55,"nodeType":"210","messageId":"211","endLine":30,"endColumn":57},{"ruleId":"212","severity":1,"message":"213","line":86,"column":6,"nodeType":"214","endLine":86,"endColumn":23,"suggestions":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"224","line":1,"column":28,"nodeType":"222","messageId":"223","endLine":1,"endColumn":34},{"ruleId":"220","severity":1,"message":"225","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":14},{"ruleId":"212","severity":1,"message":"226","line":30,"column":6,"nodeType":"214","endLine":30,"endColumn":25,"suggestions":"227"},{"ruleId":"208","severity":1,"message":"209","line":43,"column":34,"nodeType":"210","messageId":"211","endLine":43,"endColumn":36},{"ruleId":"208","severity":1,"message":"209","line":21,"column":27,"nodeType":"210","messageId":"211","endLine":21,"endColumn":29},{"ruleId":"220","severity":1,"message":"221","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"228","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":23},{"ruleId":"220","severity":1,"message":"221","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"228","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":23},{"ruleId":"220","severity":1,"message":"221","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"229","line":1,"column":28,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"228","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":23},{"ruleId":"220","severity":1,"message":"230","line":1,"column":38,"nodeType":"222","messageId":"223","endLine":1,"endColumn":47},{"ruleId":"212","severity":1,"message":"231","line":39,"column":6,"nodeType":"214","endLine":39,"endColumn":8,"suggestions":"232"},{"ruleId":"212","severity":1,"message":"233","line":36,"column":6,"nodeType":"214","endLine":36,"endColumn":16,"suggestions":"234"},{"ruleId":"212","severity":1,"message":"235","line":18,"column":6,"nodeType":"214","endLine":18,"endColumn":8,"suggestions":"236"},{"ruleId":"212","severity":1,"message":"237","line":32,"column":6,"nodeType":"214","endLine":32,"endColumn":8,"suggestions":"238"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'AuthState.isAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["239"],"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'AllExercises.length'. Either include it or remove the dependency array.",["242"],"'AxiosInstance' is defined but never used.","'useState' is defined but never used.","'Component' is defined but never used.","React Hook useEffect has missing dependencies: 'WorkoutProgress' and 'match.params.id'. Either include them or remove the dependency array. You can also do a functional update 'setWorkoutProgress(W => ...)' if you only need 'WorkoutProgress' in the 'setWorkoutProgress' call.",["243"],"React Hook useEffect has missing dependencies: 'pathname' and 'username'. Either include them or remove the dependency array. If 'setData' needs the current value of 'pathname', you can also switch to useReducer instead of useState and read 'pathname' in the reducer.",["244"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["245"],"React Hook useEffect has missing dependencies: 'cachePath' and 'url'. Either include them or remove the dependency array. If 'setState' needs the current value of 'cachePath', you can also switch to useReducer instead of useState and read 'cachePath' in the reducer.",["246"],{"desc":"247","fix":"248"},"no-global-assign","no-unsafe-negation",{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},"Update the dependencies array to be: [AuthState.isAuthenticated, AuthState.token]",{"range":"259","text":"260"},"Update the dependencies array to be: [AllExercises.length, match.params.type]",{"range":"261","text":"262"},"Update the dependencies array to be: [WorkoutProgress, match.params.id]",{"range":"263","text":"264"},"Update the dependencies array to be: [menuType, pathname, username]",{"range":"265","text":"266"},"Update the dependencies array to be: [id]",{"range":"267","text":"268"},"Update the dependencies array to be: [cachePath, url]",{"range":"269","text":"270"},[2715,2732],"[AuthState.isAuthenticated, AuthState.token]",[1302,1321],"[AllExercises.length, match.params.type]",[1150,1152],"[WorkoutProgress, match.params.id]",[1270,1280],"[menuType, pathname, username]",[561,563],"[id]",[951,953],"[cachePath, url]"]