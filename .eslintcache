[{"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\index.js":"1","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\App.js":"2","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\reportWebVitals.js":"3","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Home\\Home.js":"4","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Auth\\Auth.js":"5","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Logo\\Logo.js":"6","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Auth\\InputList\\InputList.js":"7","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Input\\Input.js":"8","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\ErrorMsg\\ErrorMsg.js":"9","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\WorkOuts\\WorkOuts.js":"10","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\Feed.js":"11","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Profile\\Profile.js":"12","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Navbar\\Navbar.js":"13","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\AuthContext.js":"14","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\WorkOutCard\\WorkOutCard.js":"15","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorLogin\\InstructorLogin.js":"16","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorWorkouts\\InstructorWorkouts.js":"17","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\InstructorStudents.js":"18","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\UserProfileCard\\UserProfileCard.js":"19","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Loader\\Loader.js":"20","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\StudentModal\\StudentModal.js":"21","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\InstructorNewWorkout.js":"22","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiThree\\StateUiThree.js":"23","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiOne\\StateUiOne.js":"24","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiTwo\\StateUiTwo.js":"25","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\NewStudentModal\\NewStudentModal.js":"26","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\NewStudentModal\\StudentCard\\StudentCard.js":"27","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\AssignWorkoutModal\\AssignWorkoutModal.js":"28","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\AssignWorkoutModal\\WorkoutCard\\WorkoutCard.js":"29","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\DoWorkOutSummary.js":"30","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\ExerciseCard\\ExerciseCard.js":"31","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\PostCard\\PostCard.js":"32","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\NewPost\\NewPost.js":"33","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchModal\\UserSearchModal.js":"34","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserPanel.js":"35","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\MainFeed\\MainFeed.js":"36","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchModal\\SearchedUserListItem\\SearchedUserListItem.js":"37","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchInput\\UserSearchInput.js":"38","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\NotFound\\NotFound.js":"39","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Profile\\Menu.js":"40","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\DoWorkOut.js":"41","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\AfterWorkout.js":"42","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\Hooks\\fetchWithCache.js":"43"},{"size":593,"mtime":1609778423767,"results":"44","hashOfConfig":"45"},{"size":4305,"mtime":1613293345736,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"45"},{"size":175,"mtime":1609778243535,"results":"48","hashOfConfig":"45"},{"size":2138,"mtime":1613288072444,"results":"49","hashOfConfig":"45"},{"size":244,"mtime":1609782036953,"results":"50","hashOfConfig":"45"},{"size":4594,"mtime":1613285955646,"results":"51","hashOfConfig":"45"},{"size":645,"mtime":1610388807900,"results":"52","hashOfConfig":"45"},{"size":570,"mtime":1610359228846,"results":"53","hashOfConfig":"45"},{"size":2798,"mtime":1613302296310,"results":"54","hashOfConfig":"45"},{"size":338,"mtime":1611222919166,"results":"55","hashOfConfig":"45"},{"size":2436,"mtime":1611906615708,"results":"56","hashOfConfig":"45"},{"size":3881,"mtime":1613287704659,"results":"57","hashOfConfig":"45"},{"size":113,"mtime":1609913879656,"results":"58","hashOfConfig":"45"},{"size":1098,"mtime":1611907323188,"results":"59","hashOfConfig":"45"},{"size":3992,"mtime":1611906686504,"results":"60","hashOfConfig":"45"},{"size":2598,"mtime":1612100721073,"results":"61","hashOfConfig":"45"},{"size":4534,"mtime":1612100705851,"results":"62","hashOfConfig":"45"},{"size":943,"mtime":1610904890810,"results":"63","hashOfConfig":"45"},{"size":521,"mtime":1612097862789,"results":"64","hashOfConfig":"45"},{"size":1813,"mtime":1611983255487,"results":"65","hashOfConfig":"45"},{"size":3900,"mtime":1611906615738,"results":"66","hashOfConfig":"45"},{"size":2333,"mtime":1610177848863,"results":"67","hashOfConfig":"45"},{"size":1027,"mtime":1611906615830,"results":"68","hashOfConfig":"45"},{"size":4191,"mtime":1610879381998,"results":"69","hashOfConfig":"45"},{"size":2313,"mtime":1611984093637,"results":"70","hashOfConfig":"45"},{"size":1133,"mtime":1611984166845,"results":"71","hashOfConfig":"45"},{"size":1731,"mtime":1611906615830,"results":"72","hashOfConfig":"45"},{"size":1316,"mtime":1611904325614,"results":"73","hashOfConfig":"45"},{"size":3769,"mtime":1612332090048,"results":"74","hashOfConfig":"45"},{"size":849,"mtime":1610949987537,"results":"75","hashOfConfig":"45"},{"size":976,"mtime":1611906641208,"results":"76","hashOfConfig":"45"},{"size":2317,"mtime":1611904325499,"results":"77","hashOfConfig":"45"},{"size":2059,"mtime":1611906541313,"results":"78","hashOfConfig":"45"},{"size":1980,"mtime":1611297173775,"results":"79","hashOfConfig":"45"},{"size":1094,"mtime":1611906615830,"results":"80","hashOfConfig":"45"},{"size":2330,"mtime":1611906662698,"results":"81","hashOfConfig":"45"},{"size":969,"mtime":1611297294515,"results":"82","hashOfConfig":"45"},{"size":624,"mtime":1611383209498,"results":"83","hashOfConfig":"45"},{"size":2828,"mtime":1611922822489,"results":"84","hashOfConfig":"45"},{"size":4199,"mtime":1612090769129,"results":"85","hashOfConfig":"45"},{"size":1329,"mtime":1612097961353,"results":"86","hashOfConfig":"45"},{"size":1009,"mtime":1613293903752,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"b3a42h",{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\index.js",[],["184","185"],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\App.js",["186","187"],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\reportWebVitals.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Home\\Home.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Auth\\Auth.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Logo\\Logo.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Auth\\InputList\\InputList.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Input\\Input.js",["188","189"],"import React, { useEffect, useRef } from \"react\";\r\n\r\nconst Input = (props) => {\r\n  let invalidClass = \"\";\r\n  if (!props.valid && props.touched) {\r\n    invalidClass = \"is-primary\";\r\n  }\r\n  return (\r\n    <div className=\"field\">\r\n      <div className=\"control\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={props.change}\r\n          value={props.value}\r\n          className={\"input \" + invalidClass}\r\n          {...props.config}\r\n        />\r\n      </div>\r\n      {!props.valid && props.touched ? (\r\n        <p className=\"help is-danger\">{props.errorMsg}</p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Input);\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\ErrorMsg\\ErrorMsg.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\WorkOuts\\WorkOuts.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\Feed.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Profile\\Profile.js",["190","191"],"import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { AxiosInstance } from \"../../App\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport Menu from \"./Menu\";\r\n\r\nconst Profile = (props) => {\r\n  const [ProfileDetails, setProfileDetails] = useState({});\r\n  const [IsLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    console.log(props);\r\n    const username = props.match.params.username;\r\n    AxiosInstance.get(\"get-user-profile-initial-load\", {\r\n      params: {\r\n        username: username,\r\n      },\r\n    }).then((res) => {\r\n      setProfileDetails(res.data);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n  let restult;\r\n  if (IsLoading) restult = <Loader />;\r\n  else if (ProfileDetails ==== \"no user found\")\r\n    restult = <Redirect to=\"/not-found\" />;\r\n  else restult = <MainProfile profileDetails={ProfileDetails} />;\r\n  return <> {restult}</>;\r\n};\r\n\r\nconst MainProfile = (props) => {\r\n  const {\r\n    user,\r\n    status,\r\n    id,\r\n    followers,\r\n    following,\r\n    posts,\r\n  } = props.profileDetails;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"container\">\r\n        <div className=\"columns is-mobile is-centered\">\r\n          <div\r\n            className=\"column p-0 is-2-desktop is-5-touch\"\r\n            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <figure\r\n              className=\"image has-background-primary is-128x128\"\r\n              style={{\r\n                // height: \"150px\",\r\n                // width: \"150px\",\r\n                borderRadius: \" 50%\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              {/* <img [src]=\"user.img\" alt=\"\" /> */}\r\n            </figure>\r\n          </div>\r\n          <div className=\"column is-4-desktop\">\r\n            <div>\r\n              <p className=\"title mb-0\">{user}</p>\r\n              <p className=\"is-size-5 mb-3\">{status}</p>\r\n              <p className=\"has-text-centered is-size-7-mobile\">\r\n                <span className=\"is-pulled-left\">{posts.length} Posts</span>\r\n                <span>{followers} Followers</span>\r\n                <span className=\"is-pulled-right\">{following} Following</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        {console.log(props)}\r\n        <Menu posts={posts} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Navbar\\Navbar.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\AuthContext.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\WorkOutCard\\WorkOutCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorLogin\\InstructorLogin.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorWorkouts\\InstructorWorkouts.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\InstructorStudents.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\UserProfileCard\\UserProfileCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\components\\Loader\\Loader.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\StudentModal\\StudentModal.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\InstructorNewWorkout.js",["192","193","194","195","196","197","198"],"import React, { useEffect, useState } from \"react\";\r\nimport { AxiosInstance } from \"../../App\";\r\nimport Exer from \"../../assets/img/ex1.gif\";\r\nimport StateUiOne from \"./StateUiOne/StateUiOne\";\r\nimport StateUiThree from \"./StateUiThree/StateUiThree\";\r\nimport StateUiTwo from \"./StateUiTwo/StateUiTwo\";\r\n//  name , exercices , rest time and exercise time\r\n// 3 different states : name , exercies and times\r\n// 2 way binding is very nessesary because : lets say the user goes back from state 3 to state 1 in that case we the same data to show and not some blank thing\r\nconst InstructorNewWorkout = ({ history, match }) => {\r\n  const [StateNo, setStateNo] = useState(1);\r\n  const [Data, setData] = useState({\r\n    name: \"\",\r\n    activeTime: 0,\r\n    restTime: 0,\r\n    touched: false,\r\n  });\r\n  // the exercises which have a\r\n  const [AllExercises, setAllExercises] = useState([]);\r\n  useEffect(() => {\r\n    let state;\r\n    if (match.params.type == \"name\") setStateNo(1);\r\n    if (match.params.type == \"exercises\") setStateNo(2);\r\n    if (match.params.type == \"time\") setStateNo(3);\r\n    setData({ ...Data, touched: false });\r\n    //   get exercise data from backend\r\n    if (!!!AllExercises.length)\r\n      AxiosInstance.get(\"get-all-exercises-name\").then((res) => {\r\n        setAllExercises(res.data);\r\n      });\r\n  }, [match.params.type]);\r\n  const handleExerciseCheckbox = (index, event) => {\r\n    // handle the selection of exercises\r\n    const updatedExercises = [...AllExercises];\r\n    const updatedExercise = { ...AllExercises[index] };\r\n    if (event.target.checked) updatedExercise.checked = true;\r\n    else updatedExercise.checked = false;\r\n    updatedExercises[index] = updatedExercise;\r\n    setAllExercises(updatedExercises);\r\n  };\r\n  const handleRemoveExercise = (id) => {\r\n    const updatedExercises = [...AllExercises];\r\n    for (let i = 0; i < updatedExercises.length; i++) {\r\n      if (updatedExercises[i].id == id) {\r\n        const updatedExercise = { ...updatedExercises[i] };\r\n        updatedExercise.checked = false;\r\n        updatedExercises[i] = updatedExercise;\r\n        setAllExercises(updatedExercises);\r\n        break;\r\n      }\r\n    }\r\n    setAllExercises(updatedExercises);\r\n  };\r\n  const handleInputChange = (item, value) => {\r\n    const data = { ...Data };\r\n    data[item] = value;\r\n    data.touched = true;\r\n    setData(data);\r\n  };\r\n  const handleSubmit = () => {\r\n    const formdata = new FormData();\r\n    formdata.append(\"activeTime\", Data.activeTime.toString());\r\n    formdata.append(\"restTime\", Data.restTime.toString());\r\n    formdata.append(\"name\", Data.name);\r\n    const exerciseIds = [];\r\n    for (let item of AllExercises) {\r\n      if (item.checked) exerciseIds.push(item.id);\r\n    }\r\n    formdata.append(\"exercises\", exerciseIds.join(\",\"));\r\n    AxiosInstance.post(\"/create-instructor-workout\", formdata).then((res) => {\r\n      history.push(\"/instructor/workouts\");\r\n      console.log(history);\r\n    });\r\n  };\r\n  let stateUi;\r\n  if (StateNo === 1)\r\n    stateUi = (\r\n      <StateUiOne\r\n        value={Data.name}\r\n        handleInput={handleInputChange}\r\n        touched={Data.touched}\r\n        next={() => {\r\n          history.push(\"exercises\");\r\n        }}\r\n      />\r\n    );\r\n  else if (StateNo === 2)\r\n    stateUi = (\r\n      <StateUiTwo\r\n        allExercises={AllExercises}\r\n        exerciseChangeHandler={handleExerciseCheckbox}\r\n        removeExercise={handleRemoveExercise}\r\n        next={() => {\r\n          history.push(\"time\");\r\n        }}\r\n      />\r\n    );\r\n  else\r\n    stateUi = (\r\n      <StateUiThree\r\n        activeTime={Data.activeTime}\r\n        restTime={Data.restTime}\r\n        change={handleInputChange}\r\n        done={handleSubmit}\r\n      />\r\n    );\r\n  return (\r\n    <div className=\"section\">\r\n      <p className=\"is-size-2 has-text-weight-bold has-text-centered\">\r\n        New Workout\r\n      </p>\r\n      {stateUi}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstructorNewWorkout;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiThree\\StateUiThree.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiOne\\StateUiOne.js",["199"],"import React from \"react\";\r\n\r\nconst StateUiOne = ({ handleInput, value, touched, next }) => (\r\n  <div\r\n    className=\"center-vertically\"\r\n    style={{ height: \"60vh\", justifyContent: \"center\" }}\r\n  >\r\n    <div className=\"field has-addons\">\r\n      <div className=\"control\">\r\n        <label className=\" button is-static \">Workout Name</label>\r\n      </div>\r\n      <div className=\"control\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={(evnt) => {\r\n            handleInput(\"name\", evnt.target.value);\r\n          }}\r\n          value={value}\r\n          className=\"input\"\r\n        />\r\n        {touched && value == 0 && (\r\n          <p className=\"help is-danger\">Enter A Valid Name</p>\r\n        )}\r\n      </div>\r\n      <div className=\"control\">\r\n        <button\r\n          disabled={!(value.length > 0)}\r\n          className=\"button is-link is-light is-outlined\"\r\n          onClick={next}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n// @ts-ignore\r\nexport default StateUiOne;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorNewWorkout\\StateUiTwo\\StateUiTwo.js",["200","201"],"import React, { useEffect, useState } from \"react\";\r\nimport { AxiosInstance } from \"../../../App\";\r\n\r\nconst StateUiTwo = ({\r\n  allExercises,\r\n  exerciseChangeHandler,\r\n  next,\r\n  removeExercise,\r\n}) => {\r\n  // showing and removing modal using css since i wann preserve the state of the input checkboxes\r\n  const [ShowModal, setShowModal] = useState(false);\r\n\r\n  //   const [SelectedExercises, setSelectedExercises] = useState([]);\r\n  // functionality :\r\n  // 1. get all the exercies and show em in a modal,\r\n  // 2. remove exercies\r\n  // 3. pass all the ids of the exercies in a method passes\r\n  const selectedExercises = allExercises.filter((item) => !!item.checked);\r\n  console.log(selectedExercises);\r\n  let exercises;\r\n  if (!!selectedExercises.length)\r\n    exercises = (\r\n      <div className=\"columns is-multiline is-mobile\">\r\n        {selectedExercises.map((item, i) => (\r\n          <ExerciseCard\r\n            name={item.name}\r\n            key={i}\r\n            muscles={item.muscle}\r\n            remove={removeExercise.bind(this, item.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  else\r\n    exercises = (\r\n      <p className=\"is-size-5 \">You Have Not Selected Any Exercise</p>\r\n    );\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"button is-link is-light is-outlined  mb-3\"\r\n        onClick={setShowModal.bind(this, true)}\r\n      >\r\n        <span className=\"icon\">\r\n          <i className=\"fas fa-plus\"></i>\r\n        </span>\r\n        <span>Add Exercise</span>\r\n      </button>\r\n      <p className=\"is-size-4 mb-3 has-text-weight-bold\">Workout Exercises</p>\r\n      {exercises}\r\n      <div className=\"section has-text-centered\">\r\n        <button className=\"button is-link is-large\" onClick={next}>\r\n          <span>Next</span>\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-chevron-right\"></i>\r\n          </span>\r\n        </button>\r\n      </div>\r\n      <Modal\r\n        exercise={allExercises}\r\n        changed={exerciseChangeHandler}\r\n        close={setShowModal.bind(this, false)}\r\n        isActive={ShowModal && true}\r\n        done={setShowModal.bind(this, false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst ExerciseCard = ({ name, muscles, remove }) => (\r\n  <div className=\"column is-3-desktop is-6-touch\">\r\n    <div className=\"box red-gradient\">\r\n      <div className=\"columns\">\r\n        <div className=\"column is-8\">\r\n          <p className=\"is-size-4 has-text-weight-semibold\">{name}</p>\r\n          <p>{muscles}</p>\r\n        </div>\r\n        <div className=\"column has-text-right\">\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <button\r\n              onClick={remove}\r\n              className=\"button ml-5 is-danger is-medium\"\r\n            >\r\n              <span className=\"icon \">\r\n                <i className=\"fas fa-times\"></i>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Modal = ({ exercise, changed, close, done, isActive = false }) => (\r\n  <div className={\"modal \" + (isActive && \"is-active\")}>\r\n    <div className=\"modal-background\" onClick={close}></div>\r\n    <div className=\"modal-card\">\r\n      <header className=\"modal-card-head\">\r\n        <p className=\"modal-card-title\">Exercises</p>\r\n        <button className=\"delete\"></button>\r\n      </header>\r\n      <section className=\"modal-card-body has-background-light\">\r\n        {exercise.map((item, i) => (\r\n          <div key={i}>\r\n            <label className=\"checkbox is-unselectable\">\r\n              <input\r\n                checked={item.checked ? true : false}\r\n                onChange={changed.bind(this, i)}\r\n                type=\"checkbox\"\r\n                id=\"\"\r\n                className=\"mr-2\"\r\n              />\r\n              <span className=\"is-size-5\">{item.name}</span>\r\n            </label>\r\n            <br />\r\n          </div>\r\n        ))}\r\n      </section>\r\n      <footer className=\"modal-card-foot\">\r\n        <button className=\"button is-link\" onClick={done}>\r\n          Done\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default StateUiTwo;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\NewStudentModal\\NewStudentModal.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\NewStudentModal\\StudentCard\\StudentCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\AssignWorkoutModal\\AssignWorkoutModal.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\InstructorStudents\\AssignWorkoutModal\\WorkoutCard\\WorkoutCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\DoWorkOutSummary.js",["202","203"],"import React, { useEffect, useState, Component } from \"react\";\r\nimport { AxiosInstance } from \"../../App\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport AfterWorkout from \"./AfterWorkout\";\r\nimport DoWorkOut from \"./DoWorkOut\";\r\nimport ExerciseCard from \"./ExerciseCard/ExerciseCard\";\r\n\r\nconst DoWorkOutSummary = (props) => {\r\n  const [IsLoading, setIsLoading] = useState(true);\r\n  const [WorkoutProgress, setWorkoutProgress] = useState({\r\n    didStart: false,\r\n    didEnd: false,\r\n    currentExerciseNo: 0,\r\n    maxExerciseNumber: 0,\r\n  });\r\n  const [WorkoutSummaryData, setWorkoutSummaryData] = useState({});\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    AxiosInstance.get(\"/get-workout-from-id\", {\r\n      params: {\r\n        workoutId: props.match.params.id,\r\n      },\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n      setWorkoutSummaryData(res.data);\r\n      setWorkoutProgress({\r\n        ...WorkoutProgress,\r\n        maxExerciseNumber: res.data.exercise.length,\r\n      });\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n  const nextExercise = () => {\r\n    if (\r\n      WorkoutProgress.currentExerciseNo + 1 <\r\n      WorkoutProgress.maxExerciseNumber\r\n    )\r\n      setWorkoutProgress({\r\n        ...WorkoutProgress,\r\n        currentExerciseNo: WorkoutProgress.currentExerciseNo + 1,\r\n      });\r\n    else {\r\n      // end of workout,\r\n      // sending data to backend in AfterWorkout\r\n      setWorkoutProgress({\r\n        ...WorkoutProgress,\r\n        didEnd: true,\r\n        currentExerciseNo: 0,\r\n      });\r\n    }\r\n  };\r\n  const prevExercise = () => {\r\n    if (WorkoutProgress.currentExerciseNo - 1 > 0)\r\n      setWorkoutProgress({\r\n        ...WorkoutProgress,\r\n        currentExerciseNo: WorkoutProgress.currentExerciseNo - 1,\r\n      });\r\n  };\r\n  if (WorkoutProgress.didEnd)\r\n    return <AfterWorkout id={WorkoutSummaryData.id} />;\r\n  if (WorkoutProgress.didStart)\r\n    return (\r\n      <DoWorkOut\r\n        exercise={\r\n          WorkoutSummaryData.exercise[WorkoutProgress.currentExerciseNo]\r\n        }\r\n        activeTime={WorkoutSummaryData.exercise_time}\r\n        restTime={WorkoutSummaryData.rest_time}\r\n        next={nextExercise}\r\n        prev={prevExercise}\r\n      />\r\n    );\r\n  let exercises;\r\n  if (IsLoading) exercises = <Loader />;\r\n  else\r\n    exercises = (\r\n      <>\r\n        <p className=\"is-size-6 l-opacity has-text-centered\">\r\n          Total Workout Time : {Math.floor(WorkoutSummaryData.total_time / 60)}\r\n          min\r\n        </p>\r\n        <hr />\r\n        <div className=\"columns is-multiline\">\r\n          {WorkoutSummaryData.exercise.map((item, i) => (\r\n            <div className=\"column is-4\" key={i}>\r\n              <ExerciseCard name={item.name} muscle={item.muscle} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  // gotta create a arr of all the exer and make a current exercise index :then loop through that list one by one and complete all the exercise with rest time included.\r\n  return (\r\n    <div className=\"section\">\r\n      <p className=\"is-size-3-desktop is-size-4-touch has-text-weight-bold has-text-centered \">\r\n        WorkOut Summary\r\n      </p>\r\n      {exercises}\r\n      <nav className=\"navbar is-fixed-bottom is-flex is-justify-content-center\">\r\n        <div className=\"navbar-item\">\r\n          <button\r\n            onClick={setWorkoutProgress.bind(this, {\r\n              ...WorkoutProgress,\r\n              didStart: true,\r\n            })}\r\n            style={{ borderRadius: \"50%\" }}\r\n            className=\"button is-large is-danger\"\r\n          >\r\n            <span className=\"icon \">\r\n              <i className=\"fas fa-dumbbell\"></i>\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoWorkOutSummary;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\ExerciseCard\\ExerciseCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\PostCard\\PostCard.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\NewPost\\NewPost.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchModal\\UserSearchModal.js",["204"],"import React, { useEffect, useState } from \"react\";\r\nimport { AxiosInstance } from \"../../../../App\";\r\nimport Loader from \"../../../../components/Loader/Loader\";\r\nimport UserSearchInput from \"../UserSearchInput/UserSearchInput\";\r\nimport SearchedUserListItem from \"./SearchedUserListItem/SearchedUserListItem\";\r\n\r\nconst UserSearchModal = ({ query, searchUser, close }) => {\r\n  const [IsLoading, setIsLoading] = useState(false);\r\n  const [Results, setResults] = useState([]);\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    AxiosInstance.get(\"search-user\", {\r\n      params: {\r\n        query: query,\r\n      },\r\n    }).then((res) => {\r\n      setResults(res.data);\r\n      setIsLoading(false);\r\n    });\r\n  }, [query]);\r\n  let results;\r\n  if (IsLoading) results = <Loader />;\r\n  else if (Results.length == 0)\r\n    results = (\r\n      <p className=\"is-size-5 has-text-weight-semibold\">No Users Found</p>\r\n    );\r\n  else\r\n    results = Results.map((item, i) => (\r\n      <SearchedUserListItem\r\n        username={item.username}\r\n        status={item.status}\r\n        actionType={item.btn_action}\r\n        id={item.id}\r\n        key={i}\r\n      />\r\n    ));\r\n  return (\r\n    <div className=\"modal is-active\">\r\n      <div className=\"modal-background\" onClick={close}></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head\">\r\n          <p className=\"modal-card-title\">\r\n            Showing results for{\" \"}\r\n            <span className=\"has-text-weight-semibold\">{query}</span>\r\n          </p>\r\n          <button className=\"delete\" onClick={close}></button>\r\n        </header>\r\n        <section className=\"modal-card-body\">\r\n          <UserSearchInput openUserSearchModal={searchUser} />\r\n          <div>{results}</div>\r\n        </section>\r\n        <footer className=\"modal-card-foot\">\r\n          <button\r\n            onClick={close}\r\n            className=\"button is-link  is-fullwidth is-medium\"\r\n          >\r\n            Done\r\n          </button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSearchModal;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserPanel.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\MainFeed\\MainFeed.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchModal\\SearchedUserListItem\\SearchedUserListItem.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Feed\\UserPanel\\UserSearchInput\\UserSearchInput.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\NotFound\\NotFound.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\Profile\\Menu.js",["205"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AxiosInstance } from \"../../App\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport WorkOutCard from \"../../components/WorkOutCard/WorkOutCard\";\r\nimport PostCard from \"../Feed/PostCard/PostCard\";\r\n\r\nconst Menu = (props) => {\r\n  const { posts } = props;\r\n  console.log(props);\r\n  const { type: menuType } = props.match.params;\r\n  const [Data, setData] = useState([]);\r\n  const [IsLoading, setIsLoading] = useState(false);\r\n  useEffect(() => {\r\n    let urlEnding;\r\n    if (menuType === \"pending\") urlEnding = \"pending\";\r\n    else if (menuType === \"past\") urlEnding = \"past\";\r\n    else return;\r\n    AxiosInstance.get(`get-user-workouts/${urlEnding}`).then((res) => {\r\n      console.log(res.data);\r\n      setData(res.data);\r\n    });\r\n  }, [menuType]);\r\n  let grid;\r\n  if (IsLoading) grid = <Loader />;\r\n  else if (menuType === \"pending\" || menuType === \"past\")\r\n    if (!!Data.length)\r\n      grid = Data.map((item, i) => (\r\n        <div className=\"column is-3-desktop is-6-touch \" key={i}>\r\n          <WorkOutCard\r\n            title={item.workout.details.name}\r\n            muscles={item.workout.details.muscles.join(\", \")}\r\n            time={item.workout.details.totalTime}\r\n            id={item.workout.details.id}\r\n          />\r\n        </div>\r\n      ));\r\n    else grid = <p className=\"is-title is-4\">No Data Found</p>;\r\n  else if (!!posts.length)\r\n    grid = posts.map((item, i) => (\r\n      <div className=\"column is-4\" key={i}>\r\n        <PostCard />\r\n      </div>\r\n    ));\r\n  else grid = grid = <p className=\"is-title is-4\">No Post Found</p>;\r\n  return (\r\n    <>\r\n      <div className=\"tabs is-centered\">\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              to={`/profile/${props.match.params.username}`}\r\n              exact\r\n              activeClassName=\"is-active\"\r\n            >\r\n              Posts\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to={`/profile/${props.match.params.username}/workouts/pending`}\r\n              exact\r\n              activeClassName=\"is-active\"\r\n            >\r\n              Pending Wokouts\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to={`/profile/${props.match.params.username}/workouts/past`}\r\n              exact\r\n              activeClassName=\"is-active\"\r\n            >\r\n              Past Workouts\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"columns is-centered\">\r\n        <div className=\"column is-8\">\r\n          <div className=\"columns is-multiline is-mobile\">{grid}</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Menu);\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\DoWorkOut.js",[],"C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\pages\\DoWorkOutSummary\\AfterWorkout.js",["206"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AxiosInstance } from \"../../App\";\r\nimport img from \"../../assets/img/workoutComplete.gif\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nconst AfterWorkout = ({ id }) => {\r\n  console.log(id);\r\n  const [IsLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    // send data to backend\r\n    AxiosInstance.delete(\"/workout-complete\", {\r\n      params: {\r\n        workoutDateId: id,\r\n      },\r\n    }).then((res) => {\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n  let workout;\r\n  if (IsLoading) workout = <Loader>Saving Your Workout ... </Loader>;\r\n  else\r\n    workout = (\r\n      <div className=\"buttons is-centered\">\r\n        <Link to=\"/workouts/pending\" className=\"button is-medium\">\r\n          Workout More\r\n        </Link>\r\n        <Link to=\"/feed\" className=\"button is-medium\">\r\n          Go to feed\r\n        </Link>\r\n      </div>\r\n    );\r\n  return (\r\n    <div className=\"is-flex is-justify-content-center\">\r\n      <div>\r\n        <div className=\"is-flex is-justify-content-center\">\r\n          <figure className=\"image\">\r\n            <img src={img} alt=\"\" />\r\n          </figure>\r\n        </div>\r\n        <br />\r\n        {workout}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AfterWorkout;\r\n","C:\\development\\gymorzo\\gymorzo-frontend\\gymorzo\\src\\Hooks\\fetchWithCache.js",["207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":30,"column":55,"nodeType":"214","messageId":"215","endLine":30,"endColumn":57},{"ruleId":"216","severity":1,"message":"217","line":86,"column":6,"nodeType":"218","endLine":86,"endColumn":23,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"224","line":1,"column":28,"nodeType":"222","messageId":"223","endLine":1,"endColumn":34},{"ruleId":"216","severity":1,"message":"225","line":21,"column":6,"nodeType":"218","endLine":21,"endColumn":8,"suggestions":"226"},{"ruleId":"220","severity":1,"message":"227","line":34,"column":5,"nodeType":"222","messageId":"223","endLine":34,"endColumn":7},{"ruleId":"220","severity":1,"message":"228","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":12},{"ruleId":"220","severity":1,"message":"229","line":21,"column":9,"nodeType":"222","messageId":"223","endLine":21,"endColumn":14},{"ruleId":"212","severity":1,"message":"213","line":22,"column":27,"nodeType":"214","messageId":"215","endLine":22,"endColumn":29},{"ruleId":"212","severity":1,"message":"213","line":23,"column":27,"nodeType":"214","messageId":"215","endLine":23,"endColumn":29},{"ruleId":"212","severity":1,"message":"213","line":24,"column":27,"nodeType":"214","messageId":"215","endLine":24,"endColumn":29},{"ruleId":"216","severity":1,"message":"230","line":31,"column":6,"nodeType":"218","endLine":31,"endColumn":25,"suggestions":"231"},{"ruleId":"212","severity":1,"message":"213","line":44,"column":34,"nodeType":"214","messageId":"215","endLine":44,"endColumn":36},{"ruleId":"212","severity":1,"message":"213","line":21,"column":27,"nodeType":"214","messageId":"215","endLine":21,"endColumn":29},{"ruleId":"220","severity":1,"message":"221","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"232","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":23},{"ruleId":"220","severity":1,"message":"233","line":1,"column":38,"nodeType":"222","messageId":"223","endLine":1,"endColumn":47},{"ruleId":"216","severity":1,"message":"234","line":32,"column":6,"nodeType":"218","endLine":32,"endColumn":8,"suggestions":"235"},{"ruleId":"212","severity":1,"message":"213","line":23,"column":27,"nodeType":"214","messageId":"215","endLine":23,"endColumn":29},{"ruleId":"220","severity":1,"message":"236","line":14,"column":21,"nodeType":"222","messageId":"223","endLine":14,"endColumn":33},{"ruleId":"216","severity":1,"message":"237","line":19,"column":6,"nodeType":"218","endLine":19,"endColumn":8,"suggestions":"238"},{"ruleId":"216","severity":1,"message":"239","line":31,"column":6,"nodeType":"218","endLine":31,"endColumn":8,"suggestions":"240"},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'AuthState.isAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["243"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["244"],"'id' is assigned a value but never used.","'Exer' is defined but never used.","'state' is defined but never used.","React Hook useEffect has missing dependencies: 'AllExercises.length' and 'Data'. Either include them or remove the dependency array. You can also do a functional update 'setData(D => ...)' if you only need 'Data' in the 'setData' call.",["245"],"'AxiosInstance' is defined but never used.","'Component' is defined but never used.","React Hook useEffect has missing dependencies: 'WorkoutProgress' and 'props.match.params.id'. Either include them or remove the dependency array. You can also do a functional update 'setWorkoutProgress(W => ...)' if you only need 'WorkoutProgress' in the 'setWorkoutProgress' call.",["246"],"'setIsLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["247"],"React Hook useEffect has missing dependencies: 'cachePath' and 'url'. Either include them or remove the dependency array. If 'setState' needs the current value of 'cachePath', you can also switch to useReducer instead of useState and read 'cachePath' in the reducer.",["248"],"no-global-assign","no-unsafe-negation",{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [AuthState.isAuthenticated, AuthState.token]",{"range":"261","text":"262"},"Update the dependencies array to be: [props]",{"range":"263","text":"264"},"Update the dependencies array to be: [AllExercises.length, Data, match.params.type]",{"range":"265","text":"266"},"Update the dependencies array to be: [WorkoutProgress, props.match.params.id]",{"range":"267","text":"268"},"Update the dependencies array to be: [id]",{"range":"269","text":"270"},"Update the dependencies array to be: [cachePath, url]",{"range":"271","text":"272"},[2715,2732],"[AuthState.isAuthenticated, AuthState.token]",[680,682],"[props]",[1314,1333],"[AllExercises.length, Data, match.params.type]",[1050,1052],"[WorkoutProgress, props.match.params.id]",[581,583],"[id]",[912,914],"[cachePath, url]"]